name: 'build & publish'
on:
  push:
    tags:
      - v**

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3

      # Install & Setup [pnpm]
      - name: install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.2.0
          run_install: false
      - name: get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        name: setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: install pnpm dependencies
        run: pnpm i --frozen-lockfile
      
      # Install & Setup [rust]
      # - name: setup cargo cache
      #   uses: actions/cache@v3
      #   with:
      #     path: src-tauri/target
      #      # Add date to the cache to keep it up to date
      #     key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
      #     restore-keys: |
      #       ${{ runner.os }}-cargo- 

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - uses: actions/cache@v3
        name: setup cargo cache
        with:
          path: ~/src-tauri/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      # - name: Setup Cargo Cache
      #   uses: Swatinem/rust-cache@v2
      #   with:
      #     workspaces: |
      #       src-tauri
      #     key: ${{ runner.os }}

      # Install [tauri] dependencies
      - name: Install tauri dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
      
      # Generate a changelog using the commit history
      - name: üìü Semantic Changelog
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
          writeToFile: false
          useGitmojis: false

      # Build the app using [tauri]
      - name: üì¶Ô∏è Build the Tauri App
        uses: tauri-apps/tauri-action@dev
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 'Emberry ${{ github.ref_name }}'
          releaseBody: |
            ## Changelog üìú
            ${{ steps.changelog.outputs.changes }}
            <br>Happy chatting! *- Emberry DevTeam üòã*
          releaseDraft: true
          includeUpdaterJson: true
          prerelease: false
